name: Zip Deploy Lambda

description: 'Archive code files, upload to S3, and deploy Lambda function'

inputs:
  inputFiles:
    description: 'Python files to archive (e.g., *.py)'
    required: true
  s3BucketName:
    description: 'Name of the S3 bucket'
    required: true
  zipFileName:
    description: 'Name of the Zip archive to be created'
    required: true
  s3ObjectKey:
    description: 'S3 object key for the uploaded Zip archive'
    required: true
  lambdaName:
    description: 'Name of the Lambda function'
    required: true
  runtime:
    description: 'Runtime of the Lambda function'
    default: 'python3.11'
  lambdaRole:
    description: 'ARN of the role for the Lambda function'
    required: true
  lambdaFunctionHandler:
    description: 'Handler of the Lambda function'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ inputs.runtime }}

    - name: Archive Python files
      run: zip -r ${{ github.workspace }}/${{ inputs.zipFileName }} ${{ inputs.inputFiles }}

    - name: Check if Lambda exists
      id: check_lambda
      run: |
        aws lambda get-function --function-name ${{ inputs.lambdaName }} || exit 0
      continue-on-error: true

    - name: Upload zip to S3
      run: aws s3 cp ${{ github.workspace }}/${{ inputs.zipFileName }} s3://${{ inputs.s3BucketName }}/${{ inputs.s3ObjectKey }}
      if: steps.check_lambda.outcome != 'success'

    - name: Deploy Lambda function
      run: |
        aws lambda create-function \
          --function-name ${{ inputs.lambdaName }} \
          --runtime ${{ inputs.runtime }} \
          --role ${{ inputs.lambdaRole }} \
          --handler ${{ inputs.lambdaFunctionHandler }} \
          --code S3Bucket=${{ inputs.s3BucketName }},S3Key=${{ inputs.s3ObjectKey }}
